openapi: 3.0.0
info:
  title: JupyterHub API
  description: API for the Spawner UI of JupyterHub
  version: 0.1.0
servers:
  - url: /services/jsp-api
    description: Add URL prefix for JupyterHub service

paths:
  /api/whoami:
    get:
      operationId: jupyterhub_singleuser_profiles.api.api.whoami
      summary: Get current user info
      responses:
        '200':
          description: OK

  /api/user/configmap:
    get:
      operationId: jupyterhub_singleuser_profiles.api.api.get_user_cm
      summary: Get a user ConfigMap based on authenticated user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/configmap'
        '404':
          description: ConfigMap not found
    post:
      operationId: jupyterhub_singleuser_profiles.api.api.update_user_cm
      summary: Updates user ConfigMap with json data and returns it as response
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configmap'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/configmap'

  /api/ui/config:
    get:
      operationId: jupyterhub_singleuser_profiles.api.api.get_ui_config
      summary: Get a part of the main ConfigMap containing information about the UI
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UIConfig"

  /api/images:
    get:
      operationId: jupyterhub_singleuser_profiles.api.api.get_images
      summary: Get an array of strings of image names (not capable of returning pure json)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - type: array
                    items:
                      type: string
                  - type: string
  
  /api/images/{image_name}:
    get:
      operationId: jupyterhub_singleuser_profiles.api.api.get_image_info
      summary: Get human readable image information in a json.
      parameters:
        - name: image_name
          in: path
          required: true
          description: Name of the image
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageInfo"
        '404':
          description: Image not found

  /api/images/default:
    get:
      operationId: jupyterhub_singleuser_profiles.api.api.get_default_image
      summary: Get the default image, (either one with label or first in list)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string

  /api/sizes:
    get:
      operationId: jupyterhub_singleuser_profiles.api.api.get_sizes
      summary: Get an array strings of size names or a pure json with all parameters
      parameters:
        - name: pure_json
          in: query
          required: false
          description: Returns a full json if true
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - type: array
                    items:
                      type: string
                  - type: string
  
  /api/size/{size_name}:
    get:
      operationId: jupyterhub_singleuser_profiles.api.api.get_size_by_name
      summary: Get a single size by name
      parameters:
        - name: size_name
          in: path
          required: true
          description: Name of the size
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '404':
          description: Size not found

components:
  schemas:
    configmap:
      title: ConfigMap
      type: object
      properties:
        env:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              type:
                type: string
        gpu:
          type: integer
        last_selected_image:
          type: string
        last_selected_size:
          type: string
    UIConfig:
      title: UIConfig
      type: object
      properties:
        gpuConfig:
          title: Gpuconfig
          default: {}
          allOf:
          - "$ref": "#/components/schemas/GpuConfig"
        imageConfig:
          title: Imageconfig
          default: {}
          allOf:
          - "$ref": "#/components/schemas/ImageConfig"
        sizeConfig:
          title: Sizeconfig
          default: {}
          allOf:
          - "$ref": "#/components/schemas/SizeConfig"
        envVarConfig:
          title: Envvarconfig
          default: {}
          allOf:
          - "$ref": "#/components/schemas/EnvVarConfig"

    GpuCheckbox:
      title: GpuCheckbox
      type: object
      properties:
        value:
          title: Value
          default: 1
          type: integer
    GpuDropdown:
      title: GpuDropdown
      type: object
      properties:
        start:
          title: Start
          default: 0
          type: integer
        end:
          title: End
          default: 1
          type: integer
    GpuInput:
      title: GpuInput
      type: object
      properties:
        limit:
          title: Limit
          default: 1
          type: integer
    GpuConfig:
      title: GpuConfig
      type: object
      properties:
        enabled:
          title: Enabled
          default: true
          type: boolean
        type:
          title: Type
          type: string
        gpuCheckbox:
          "$ref": "#/components/schemas/GpuCheckbox"
        gpuDropdown:
          "$ref": "#/components/schemas/GpuDropdown"
        gpuInput:
          "$ref": "#/components/schemas/GpuInput"
    ImageConfigSort:
      title: ImageConfigSort
      description: An enumeration.
      enum:
      - name
      - version
      type: string
    ImageConfig:
      title: ImageConfig
      type: object
      properties:
        blacklist:
          title: Blacklist
          default: []
          type: array
          items: {}
        whitelist:
          title: Whitelist
          default: []
          type: array
          items: {}
        sort:
          "$ref": "#/components/schemas/ImageConfigSort"
    SizeConfig:
      title: SizeConfig
      type: object
      properties:
        enabled:
          title: Enabled
          default: true
          type: boolean
    EnvVarType:
      title: EnvVarType
      description: An enumeration.
      enum:
      - text
      - password
      type: string
    EnvVar:
      title: EnvVar
      type: object
      properties:
        name:
          title: Name
          type: string
        type:
          "$ref": "#/components/schemas/EnvVarType"
      required:
      - name
      - type
    EnvVarCategory:
      title: EnvVarCategory
      type: object
      properties:
        name:
          title: Name
          type: string
        variables:
          title: Variables
          type: array
          items:
            "$ref": "#/components/schemas/EnvVar"
      required:
      - name
    EnvVarConfig:
      title: EnvVarConfig
      type: object
      properties:
        enabled:
          title: Enabled
          default: true
          type: boolean
        categories:
          title: Categories
          type: array
          items:
            "$ref": "#/components/schemas/EnvVarCategory"
    ImageInfo:
      title: ImageInfo
      type: object
      properties:
        description:
          title: Description
          type: string
        url:
          title: Url
          type: string
        name:
          title: Name
          type: string
        tag_specific:
          "$ref": "#/components/schemas/ImageTagInfo"
      required:
      - tag_specific
    NameVersionPair:
      title: NameVersionPair
      type: object
      properties:
        name:
          title: Name
          type: string
        version:
          title: Version
          type: string
      required:
      - name
      - version
    ImageTagInfo:
      title: ImageTagInfo
      type: object
      properties:
        software:
          title: Software
          type: array
          items:
            "$ref": "#/components/schemas/NameVersionPair"
        dependencies:
          title: Dependencies
          type: array
          items:
            "$ref": "#/components/schemas/NameVersionPair"
      required:
      - software
      - dependencies